{"ast":null,"code":"import _classCallCheck from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/src/components/Comments.jsx\";\nimport React, { Component } from \"react\";\nimport { getComments } from \"../Api\";\nimport Voting from \"./Voting\";\nimport { deleteItem } from \"../Api\";\nimport PostComment from \"./PostComment\";\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: [],\n      didDelete: 0\n    };\n\n    _this.handleDelete = function (event) {\n      var id = event.target.id;\n      var comments = _this.state.comments;\n      var updatedComments = comments.filter(function (comment) {\n        return comment.comment_id !== +id;\n      });\n      deleteItem(id).catch(function (err) {\n        return console.log(updatedComments);\n      });\n\n      _this.setState({\n        comments: updatedComments\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"optimisticPostRender\",\n    value: function optimisticPostRender(post) {\n      var comments = this.state.comments;\n      comments.push(post);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var article_id = this.props.article_id;\n      getComments(article_id).then(function (data) {\n        return _this2.setState({\n          comments: data.comments\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var article_id = this.props.article_id;\n\n      if (prevState.didDelete !== this.state.didDelete) {\n        getComments(article_id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var authorVoteStyle = {\n        textAlign: \"center\"\n      };\n      var bodyStyle = {\n        margin: \"60px\",\n        textAlign: \"center\"\n      };\n      var commTitle = {\n        textAlign: \"center\"\n      };\n      var deleteButton = {\n        textAlign: \"center\"\n      };\n      var _this$props = this.props,\n          article_id = _this$props.article_id,\n          username = _this$props.username;\n      var comments = this.state.comments;\n      var commentItems = this.state.comments.map(function (comment) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          style: bodyStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, comment.body), React.createElement(\"div\", {\n          style: deleteButton,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, username === comment.author && React.createElement(\"button\", {\n          onClick: _this3.handleDelete,\n          id: comment.comment_id,\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Delete Post\")), React.createElement(\"p\", {\n          style: authorVoteStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"User: \", comment.author), React.createElement(Voting, {\n          votes: comment.votes,\n          comment_id: comment.comment_id,\n          article_id: comment.article_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"#comments\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: commTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Comments\"), commentItems), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(PostComment, {\n        article_id: article_id,\n        optimisticPostRender: this.optimisticPostRender,\n        comments: comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nexport default Comments;","map":{"version":3,"sources":["/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/nc-news/src/components/Comments.jsx"],"names":["React","Component","getComments","Voting","deleteItem","PostComment","Comments","state","comments","didDelete","handleDelete","event","id","target","updatedComments","filter","comment","comment_id","catch","err","console","log","setState","post","push","article_id","props","then","data","prevProps","prevState","authorVoteStyle","textAlign","bodyStyle","margin","commTitle","deleteButton","username","commentItems","map","body","author","votes","optimisticPostRender"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getComments } from \"../Api\";\nimport Voting from \"./Voting\";\nimport { deleteItem } from \"../Api\";\nimport PostComment from \"./PostComment\";\n\nclass Comments extends Component {\n  state = {\n    comments: [],\n    didDelete: 0\n  };\n\n  optimisticPostRender(post) {\n    const { comments } = this.state;\n    comments.push(post);\n  }\n\n  componentDidMount() {\n    const { article_id } = this.props;\n    getComments(article_id).then(data =>\n      this.setState({ comments: data.comments })\n    );\n  }\n\n  handleDelete = event => {\n    const { id } = event.target;\n    const { comments } = this.state;\n    const updatedComments = comments.filter(comment => {\n      return comment.comment_id !== +id;\n    });\n    deleteItem(id).catch(err => console.log(updatedComments));\n    this.setState({ comments: updatedComments });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { article_id } = this.props;\n    if (prevState.didDelete !== this.state.didDelete) {\n      getComments(article_id);\n    }\n  }\n\n  render() {\n    const authorVoteStyle = {\n      textAlign: \"center\"\n    };\n\n    const bodyStyle = {\n      margin: \"60px\",\n      textAlign: \"center\"\n    };\n\n    const commTitle = {\n      textAlign: \"center\"\n    };\n\n    const deleteButton = {\n      textAlign: \"center\"\n    };\n\n    const { article_id, username } = this.props;\n    const { comments } = this.state;\n\n    const commentItems = this.state.comments.map(comment => {\n      return (\n        <div>\n          <h3 style={bodyStyle}>{comment.body}</h3>\n          <div style={deleteButton}>\n            {username === comment.author && (\n              <button\n                onClick={this.handleDelete}\n                id={comment.comment_id}\n                type=\"submit\"\n              >\n                Delete Post\n              </button>\n            )}\n          </div>\n          <p style={authorVoteStyle}>User: {comment.author}</p>\n          <Voting\n            votes={comment.votes}\n            comment_id={comment.comment_id}\n            article_id={comment.article_id}\n          />\n        </div>\n      );\n    });\n    return (\n      <div>\n        <div id=\"#comments\">\n          <h2 style={commTitle}>Comments</h2>\n          {commentItems}\n        </div>\n        <div>\n          <PostComment\n            article_id={article_id}\n            optimisticPostRender={this.optimisticPostRender}\n            comments={comments}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}