{"ast":null,"code":"import _defineProperty from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/src/components/PostComment.jsx\";\nimport React, { Component } from \"react\";\nimport { postComment } from \"../Api\";\nimport \"../styling/App.css\";\n\nvar PostComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PostComment, _Component);\n\n  function PostComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      body: \"\"\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(function (state) {\n        return _objectSpread({}, state, _defineProperty({}, name, value));\n      });\n    };\n\n    _this.handleCommentSubmit = function (event) {\n      event.preventDefault();\n      var article_id = _this.props.article_id;\n      var post = {\n        body: _this.state.body,\n        author: _this.props.username\n      };\n      postComment(article_id, post); // optimisticPostRender(post);\n    };\n\n    return _this;\n  }\n\n  _createClass(PostComment, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var article_id = this.props.article_id;\n\n      if (prevProps.comments !== this.props.comments) {\n        getComments(article_id).then(function (data) {\n          return _this2.setState({\n            articles: data.articles\n          });\n        }).catch(function (err) {\n          _this2.setState({\n            errStatus: {\n              message: err.response.data.message || \"Sorry this page cannot be found\",\n              status: err.response.request.status || 400\n            },\n            replace: true\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var commentStyle = {\n        textAlign: \"center\"\n      };\n      return React.createElement(\"div\", {\n        style: commentStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"Add-comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Add Comment\"), React.createElement(\"form\", {\n        onSubmit: this.handleCommentSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"Add-comment-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Body: \"), React.createElement(\"textarea\", {\n        className: \"Add-comment-body\",\n        name: \"body\",\n        onChange: this.handleChange,\n        value: this.state.body,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"Add-comment-submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return PostComment;\n}(Component);\n\nexport default PostComment;","map":{"version":3,"sources":["/Users/northcoders15/Desktop/Danny-NC/FRONT2/redo-nc-frontend/FE2-NC-News/src/components/PostComment.jsx"],"names":["React","Component","postComment","PostComment","state","body","handleChange","event","target","name","value","setState","handleCommentSubmit","preventDefault","article_id","props","post","author","username","prevProps","prevState","comments","getComments","then","data","articles","catch","err","errStatus","message","response","status","request","replace","commentStyle","textAlign"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAO,oBAAP;;IAEMC,W;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;;UAIRC,Y,GAAe,UAAAC,KAAK,EAAI;AAAA,0BACEA,KAAK,CAACC,MADR;AAAA,UACdC,IADc,iBACdA,IADc;AAAA,UACRC,KADQ,iBACRA,KADQ;;AAGtB,YAAKC,QAAL,CAAc,UAAAP,KAAK;AAAA,iCAAUA,KAAV,sBAAkBK,IAAlB,EAAyBC,KAAzB;AAAA,OAAnB;AACD,K;;UAEDE,mB,GAAsB,UAAAL,KAAK,EAAI;AAC7BA,MAAAA,KAAK,CAACM,cAAN;AAD6B,UAErBC,UAFqB,GAEmB,MAAKC,KAFxB,CAErBD,UAFqB;AAG7B,UAAME,IAAI,GAAG;AACXX,QAAAA,IAAI,EAAE,MAAKD,KAAL,CAAWC,IADN;AAEXY,QAAAA,MAAM,EAAE,MAAKF,KAAL,CAAWG;AAFR,OAAb;AAIAhB,MAAAA,WAAW,CAACY,UAAD,EAAaE,IAAb,CAAX,CAP6B,CAQ7B;AACD,K;;;;;;;uCAEkBG,S,EAAWC,S,EAAW;AAAA;;AAAA,UAC/BN,UAD+B,GAChB,KAAKC,KADW,CAC/BD,UAD+B;;AAEvC,UAAIK,SAAS,CAACE,QAAV,KAAuB,KAAKN,KAAL,CAAWM,QAAtC,EAAgD;AAC9CC,QAAAA,WAAW,CAACR,UAAD,CAAX,CACGS,IADH,CACQ,UAAAC,IAAI;AAAA,iBAAI,MAAI,CAACb,QAAL,CAAc;AAAEc,YAAAA,QAAQ,EAAED,IAAI,CAACC;AAAjB,WAAd,CAAJ;AAAA,SADZ,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACZ,UAAA,MAAI,CAAChB,QAAL,CAAc;AACZiB,YAAAA,SAAS,EAAE;AACTC,cAAAA,OAAO,EACLF,GAAG,CAACG,QAAJ,CAAaN,IAAb,CAAkBK,OAAlB,IAA6B,iCAFtB;AAGTE,cAAAA,MAAM,EAAEJ,GAAG,CAACG,QAAJ,CAAaE,OAAb,CAAqBD,MAArB,IAA+B;AAH9B,aADC;AAMZE,YAAAA,OAAO,EAAE;AANG,WAAd;AAQD,SAXH;AAYD;AACF;;;6BAEQ;AACP,UAAMC,YAAY,GAAG;AACnBC,QAAAA,SAAS,EAAE;AADQ,OAArB;AAGA,aACE;AAAK,QAAA,KAAK,EAAED,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAM,QAAA,QAAQ,EAAE,KAAKtB,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAE,KAAKN,YAHjB;AAIE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CAFF,CADF;AAmBD;;;;EA/DuBJ,S;;AAkE1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { postComment } from \"../Api\";\nimport \"../styling/App.css\";\n\nclass PostComment extends Component {\n  state = {\n    body: \"\"\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState(state => ({ ...state, [name]: value }));\n  };\n\n  handleCommentSubmit = event => {\n    event.preventDefault();\n    const { article_id /*optimisticPostRender*/ } = this.props;\n    const post = {\n      body: this.state.body,\n      author: this.props.username\n    };\n    postComment(article_id, post);\n    // optimisticPostRender(post);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { article_id } = this.props;\n    if (prevProps.comments !== this.props.comments) {\n      getComments(article_id)\n        .then(data => this.setState({ articles: data.articles }))\n        .catch(err => {\n          this.setState({\n            errStatus: {\n              message:\n                err.response.data.message || \"Sorry this page cannot be found\",\n              status: err.response.request.status || 400\n            },\n            replace: true\n          });\n        });\n    }\n  }\n\n  render() {\n    const commentStyle = {\n      textAlign: \"center\"\n    };\n    return (\n      <div style={commentStyle}>\n        <h2 className=\"Add-comment\">Add Comment</h2>\n        <form onSubmit={this.handleCommentSubmit}>\n          <div>\n            <label className=\"Add-comment-text\">Body: </label>\n            <textarea\n              className=\"Add-comment-body\"\n              name=\"body\"\n              onChange={this.handleChange}\n              value={this.state.body}\n            />\n          </div>\n          <button type=\"submit\" className=\"Add-comment-submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostComment;\n"]},"metadata":{},"sourceType":"module"}